from tokens import tok
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram.dispatcher.filters import Text
from requests import get

import logging

# –ò–º–ø–æ—Ä—Ç —Ç–æ–∫–µ–Ω–∞
tok_tg = tok

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–∞—Ç—á–µ—Ä–∞
logging.basicConfig(level=logging.INFO)

bot = Bot(token=tok_tg)
dp = Dispatcher(bot)


# –õ–æ–≤–∏–º –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç/—Ö–µ–ª–ø
@dp.message_handler(commands=['start', 'help'])
async def send_start(message: types.Message):

    # –î–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ title –¥–µ–ª–∞–µ—Ç —Ç–µ–∫—Å—Ç-–∫–∏–±–µ—Ä—Å—Å—ã–ª–∫—É - –Ω–µ –∑–∞–±—ã–≤–∞–µ–º parse_mode='Markdown'
    title = '[Analytic Company](https://analyticco.ru/)'
    txt = ('\n'
           f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏!\n\n'
           '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª!\n\n'
           '‚ö†Ô∏è –î–∞–Ω–Ω—ã–π –±–æ—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–∏–µ–º –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–º—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±–æ—Ç–∞!'
           )

    text = title + txt
    txt_ver = '‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é Telegram'

    markup = ReplyKeyboardMarkup(resize_keyboard=True)

    but_info = '–û –Ω–∞—Å'
    but_geon = '–ê–¥—Ä–µ—Å'
    but_serv = '–£—Å–ª—É–≥–∏'
    but_cont = '–ö–æ–Ω—Ç–∞–∫—Ç—ã'

    markup.add(but_info, but_serv).row(but_geon, but_cont)

    await message.answer(text.format(message.from_user), disable_web_page_preview=True, reply_markup=markup,
                         parse_mode='Markdown')
    await message.answer(txt_ver.format(message.from_user), parse_mode='Markdown')


# –ª–æ–≤–∏–º —Ç–µ–∫—Å—Ç –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
@dp.message_handler(Text(equals='–û –Ω–∞—Å'))
async def mes_info(message: types.Message):
    title = '[Analytic Company](https://analyticco.ru/)'
    txt = ('\n'
           '*–û –Ω–∞—Å*\n\n'
           '–ù–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –∏—Å–ø—ã—Ç–∞–Ω–∏—è–º–∏, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è–º–∏, –∞–Ω–∞–ª–∏–∑–∞–º–∏, –∞ —Ç–∞–∫ –∂–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π '
           '–ø—Ä–æ–¥—É–∫—Ü–∏–∏ –≤–æ –º–Ω–æ–≥–∏—Ö –ø–∏—â–µ–≤—ã—Ö –∏ –∞–≥—Ä–æ–∫—É–ª—å—Ç—É—Ä–Ω—ã—Ö –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—è—Ö!\n\n'
           )

    text = title + txt

    markup = ReplyKeyboardMarkup(resize_keyboard=True)

    but_info = 'üí† –û –Ω–∞—Å'
    but_geon = '–ê–¥—Ä–µ—Å'
    but_serv = '–£—Å–ª—É–≥–∏'
    but_cont = '–ö–æ–Ω—Ç–∞–∫—Ç—ã'

    markup.add(but_info, but_serv).row(but_geon, but_cont)

    # –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º —Ñ–æ—Ç–æ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
    url = 'https://cognitivepaper.com/userfiles/16/608_0.webp'
    photo = get(url)

    # bot.send_photo() - –∫–æ–º–∞–Ω–¥–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ç–æ –≤ —Ç–≥
    await bot.send_photo(message.chat.id, caption=text, photo=photo.content, parse_mode='Markdown',
                         reply_markup=markup)


@dp.message_handler(Text(equals='–ê–¥—Ä–µ—Å'))
async def mes_adress(message: types.Message):
    title = '[Analytic Company](https://analyticco.ru/)'
    txt = ('\n'
           '*–ê–¥—Ä–µ—Å*\n\n'
           '20 –º–∏–Ω –æ—Ç –º. –¢—É—à–∏–Ω—Å–∫–∞—è\n'
           '15 –º–∏–Ω –æ—Ç –º—Ü–¥ –¢—Ä–∏–∫–æ—Ç–∞–∂–Ω–∞—è\n\n'
           '–¢–∞–∫ –∂–µ –≤ –º–µ–Ω—é –ø–æ—è–≤–∏–ª–∞—Å—å –∫–Ω–æ–ø–∫–∞, —á—Ç–æ–±—ã –±—ã–ª–æ —É–¥–æ–±–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç üòÅ'
           )

    # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥—Ä–µ—Å–∞
    url = 'https://yandex.ru/maps/213/moscow/house/volokolamskoye_shosse_89/Z04YcgZgTEABQFtvfXRzeHxlYw==/?ll=37.410555%2C55.829067&z=16.71'

    markup = ReplyKeyboardMarkup(resize_keyboard=True)

    but_info = '–û –Ω–∞—Å'
    but_geon = 'üí† –ê–¥—Ä–µ—Å'
    but_serv = '–£—Å–ª—É–≥–∏'
    but_cont = '–ö–æ–Ω—Ç–∞–∫—Ç—ã'

    # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —É–¥–æ–±–Ω–µ–µ —á–µ–º venue
    but_geo = InlineKeyboardButton(text='–ú—ã –Ω–∞ –Ø.–∫–∞—Ä—Ç–µ', web_app=WebAppInfo(url=url))

    markup.add(but_info, but_serv).row(but_geon, but_cont)

    # —Å–æ–∑–¥–∞–ª –æ—Ç–¥–µ–ª—å–Ω–æ web-–∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–¥—Ä–µ—Å–∞ –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
    markup.add(but_geo)

    await message.answer(title + txt, parse_mode='Markdown', disable_web_page_preview=True, reply_markup=markup)


@dp.message_handler(Text(equals='–£—Å–ª—É–≥–∏'))
async def mes_copp(message: types.Message):
    title = '[Analytic Company](https://analyticco.ru/)'
    txt = ('\n'
           '*–£—Å–ª—É–≥–∏*\n\n'
           '–ê–ù–ê–õ–ò–ó–´:\n'
           '~ –ü—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–∏—Ç–∞–Ω–∏—è\n'
           '~ –ê–ª–∫–æ–≥–æ–ª—å–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏\n'
           '~ –ë–ê–î –∏ –°–ø–µ—Ü. –ø–∏—Ç–∞–Ω–∏—è\n'
           '~ –í–æ–¥—ã\n'
           '~ –ü–æ—á–≤—ã\n'
           )

    forms_url = 'https://forms.yandex.ru/cloud/626702c4c8cf4ae2e871ea4f/'
    url = 'https://avatars.mds.yandex.net/get-altay/933207/2a00000161bf5cf9558ca21e16e3e671ab9d/h300'
    photo = get(url)

    markup = ReplyKeyboardMarkup(resize_keyboard=True)

    but_info = '–û –Ω–∞—Å'
    but_geon = '–ê–¥—Ä–µ—Å'
    but_serv = 'üí† –£—Å–ª—É–≥–∏'
    but_cont = '–ö–æ–Ω—Ç–∞–∫—Ç—ã'
    but_appn = InlineKeyboardButton(text='–ó–∞—è–≤–∫–∞', web_app=WebAppInfo(url=forms_url))

    markup.add(but_info, but_serv).row(but_geon, but_cont).row(but_appn)

    await bot.send_photo(message.chat.id, caption=title + txt, photo=photo.content, parse_mode='Markdown',
                         reply_markup=markup)


@dp.message_handler(Text(equals='–ö–æ–Ω—Ç–∞–∫—Ç—ã'))
async def mes_cont(message: types.Message):
    title = '[Analytic Company](https://analyticco.ru/)'
    txt = ('\n'
           '*–ö–æ–Ω—Ç–∞–∫—Ç—ã*\n\n'
           'üì± +7 (925) 209 99 67\n'
           '‚òéÔ∏è +7 (499) 309 59 91\n'
           'üåê [–ù–∞—à —Å–∞–π—Ç](https://analyticco.ru/)\n\n'
           
           # *–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –±–æ—Ç* - –∏ –¥–∞, –ø–∞—Ä—Å-–º–æ–¥: –ú–∞—Ä–∫–¥–∞—É–Ω =)
           '*–í—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É:*\n\n'
           '–í–Ω–∏–∑—É –ø–æ—è–≤–∏–ª–∞—Å—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –∫–Ω–æ–ø–∫–∞!'
           )

    forms_url = 'https://forms.yandex.ru/cloud/626702c4c8cf4ae2e871ea4f/'

    markup = ReplyKeyboardMarkup(resize_keyboard=True)

    but_info = '–û –Ω–∞—Å'
    but_geon = '–ê–¥—Ä–µ—Å'
    but_serv = '–£—Å–ª—É–≥–∏'
    but_cont = 'üí† –ö–æ–Ω—Ç–∞–∫—Ç—ã'

    # –ó–¥–µ—Å—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.—Ñ–æ—Ä–º
    but_appn = InlineKeyboardButton(text='–ó–∞—è–≤–∫–∞', web_app=WebAppInfo(url=forms_url))

    markup.add(but_info, but_serv).row(but_geon, but_cont).row(but_appn)

    await message.answer(title + txt, disable_web_page_preview=True, parse_mode='Markdown', reply_markup=markup)


# –ø—Ä–æ—Å—Ç–æ–π –º–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏–µ —Å–º—Å –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Å–ª–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
@dp.message_handler()
async def mes_cont(message: types.Message):
    await message.delete()


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
